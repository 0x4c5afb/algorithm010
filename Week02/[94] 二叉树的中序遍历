94. 二叉树的中序遍历
给定一个二叉树，返回它的中序 遍历。

题解：

// 递归
// 复杂度分析
// 时间复杂度：O(n)。递归函数 T(n)=2⋅T(n/2)+1。
// 空间复杂度：最坏情况下需要空间O(n)，平均情况为O(log⁡n)。

class Solution {
    public List<Integer> inorderTraversal(TreeNode root) {
        List<Integer> res = new ArrayList<>();
        helper(root, res);
        return res;
    }

    public void helper(TreeNode root, List<Integer> res) {
        if (root != null) {
            if (root.left != null) {
                helper(root.left, res);
            }
            res.add(root.val);
            if (root.right != null) {
                helper(root.right, res);
            }
        }
    }
}

// 栈的遍历
// 复杂度分析
// 时间复杂度：O(n)。
// 空间复杂度：O(n)。

class Solution {
    public List<Integer> inorderTraversal(TreeNode root) {
        List<Integer> res = new ArrayList<>();
        Stack<TreeNode> stack = new Stack<>();
        TreeNode curr = root;
        while(curr != null || !stack.isEmpty()) {
            while(curr != null) {
                stack.push(curr);
                curr = curr.left;
            }
            curr = stack.pop();
            res.add(curr.val);
            curr = curr.right;
        }
        return res;
    }
}
