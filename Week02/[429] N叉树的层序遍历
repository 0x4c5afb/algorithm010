429. N叉树的层序遍历
给定一个 N 叉树，返回其节点值的层序遍历。 (即从左到右，逐层遍历)。

题解：

// 队列，广度优先
// 复杂度分析
// 时间复杂度：O(n)。n 指的是节点的数量。
//空间复杂度：O(n)。

class Solution {
    public List<List<Integer>> levelOrder(Node root) {
        List<List<Integer>> result = new ArrayList<>();
        if (root == null) return result;
        Queue<Node> queue = new LinkedList<>();
        queue.add(root);
        while(!queue.isEmpty()) {
            List<Integer> level = new ArrayList<>();
            int size = queue.size();
            for (int i = 0; i < size; i++) {
                Node node = queue.poll();
                level.add(node.val);
                queue.addAll(node.children);
            }
            result.add(level);
        }
        return result; 
    }
}

// 递归
// 复杂度分析
// 时间复杂度：O(n)。n 指的是节点的数量
// 空间复杂度：正常情况 O(log⁡n)，最坏情况 O(n)。运行时在堆栈上的空间。

class Solution {
    private List<List<Integer>> result = new ArrayList<>();
    
    public List<List<Integer>> levelOrder(Node root) {
        if (root != null)  traverseNode(root, 0);
        return result;
    }

    private void traverseNode(Node node, int level) {
        if (result.size() <= level) {
            result.add(new ArrayList<>());
        }
        result.get(level).add(node.val);
        for (Node child : node.children) {
            traverseNode(child, level+1);
        }
    }
}
